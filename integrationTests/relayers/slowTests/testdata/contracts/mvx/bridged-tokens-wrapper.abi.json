{
    "buildInfo": {
        "rustc": {
            "version": "1.78.0",
            "commitHash": "9b00956e56009bab2aa15d7bff10916599e3d6d6",
            "commitDate": "2024-04-29",
            "channel": "Stable",
            "short": "rustc 1.78.0 (9b00956e5 2024-04-29)"
        },
        "contractCrate": {
            "name": "bridged-tokens-wrapper",
            "version": "0.0.0"
        },
        "framework": {
            "name": "multiversx-sc",
            "version": "0.53.2"
        }
    },
    "name": "BridgedTokensWrapper",
    "constructor": {
        "inputs": [],
        "outputs": []
    },
    "upgradeConstructor": {
        "inputs": [],
        "outputs": []
    },
    "endpoints": [
        {
            "name": "addWrappedToken",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "universal_bridged_token_ids",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "num_decimals",
                    "type": "u32"
                }
            ],
            "outputs": []
        },
        {
            "name": "updateWrappedToken",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "universal_bridged_token_ids",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "num_decimals",
                    "type": "u32"
                }
            ],
            "outputs": []
        },
        {
            "name": "removeWrappedToken",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "universal_bridged_token_ids",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": []
        },
        {
            "name": "whitelistToken",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "chain_specific_token_id",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "chain_specific_token_decimals",
                    "type": "u32"
                },
                {
                    "name": "universal_bridged_token_ids",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": []
        },
        {
            "name": "updateWhitelistedToken",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "chain_specific_token_id",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "chain_specific_token_decimals",
                    "type": "u32"
                }
            ],
            "outputs": []
        },
        {
            "name": "blacklistToken",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "chain_specific_token_id",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": []
        },
        {
            "name": "depositLiquidity",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [],
            "outputs": []
        },
        {
            "docs": [
                "Will wrap what it can, and send back the rest unchanged"
            ],
            "name": "wrapTokens",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [],
            "outputs": [
                {
                    "type": "List<EsdtTokenPayment>"
                }
            ]
        },
        {
            "name": "unwrapToken",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "requested_token",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": []
        },
        {
            "name": "unwrapTokenCreateTransaction",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "requested_token",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "safe_address",
                    "type": "Address"
                },
                {
                    "name": "to",
                    "type": "EthAddress"
                }
            ],
            "outputs": []
        },
        {
            "name": "getUniversalBridgedTokenIds",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "variadic<TokenIdentifier>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "getTokenLiquidity",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "token",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "getChainSpecificToUniversalMapping",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "token",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                }
            ]
        },
        {
            "name": "getchainSpecificTokenIds",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "universal_token_id",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": [
                {
                    "type": "variadic<TokenIdentifier>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "pause",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "unpause",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "isPaused",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        }
    ],
    "events": [
        {
            "identifier": "pauseContract",
            "inputs": []
        },
        {
            "identifier": "unpauseContract",
            "inputs": []
        },
        {
            "identifier": "wrap_tokens",
            "inputs": [
                {
                    "name": "token_id",
                    "type": "TokenIdentifier",
                    "indexed": true
                },
                {
                    "name": "amount",
                    "type": "BigUint",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "unwrap_tokens",
            "inputs": [
                {
                    "name": "token_id",
                    "type": "TokenIdentifier",
                    "indexed": true
                },
                {
                    "name": "amount",
                    "type": "BigUint",
                    "indexed": true
                }
            ]
        }
    ],
    "esdtAttributes": [],
    "hasCallback": false,
    "types": {
        "EsdtTokenPayment": {
            "type": "struct",
            "fields": [
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "token_nonce",
                    "type": "u64"
                },
                {
                    "name": "amount",
                    "type": "BigUint"
                }
            ]
        },
        "EthAddress": {
            "type": "struct",
            "docs": [
                "Wrapper over a 20-byte array"
            ],
            "fields": [
                {
                    "name": "raw_addr",
                    "type": "array20<u8>"
                }
            ]
        }
    }
}
