#!/bin/bash
set -e

source $SCRIPTPATH/config/variables.cfg
source $SCRIPTPATH/config/functions.cfg
# Load local overrides, .gitignored
LOCAL_OVERRIDES="$SCRIPTPATH/config/local.cfg"
if [ -f "$LOCAL_OVERRIDES" ]; then
  source "$SCRIPTPATH/config/local.cfg"
fi

function install {
  check_variables
  prerequisites
  paths
  go_lang
  check_api_limit
  build_binary
  systemd
  echo -e
  echo -e "${GREEN}--> mx-bridge-sc-calls-executor installed. Don't forget to add the multiversx.pem key file in ../cmd/scCallsExecutor/keys and to configure the ../cmd/scCallsExecutor/config/config.toml file. Then call the start function...${NC}"
  echo -e
}

function upgrade {
  echo -e
  read -p "Do you want to go on with the upgrade (Default No) ? (Yy/Nn)" yn
  echo -e

  case $yn in
    [Yy]* )
      sudo systemctl stop mx-bridge-sc-calls-executor
      check_variables
      check_api_limit
      build_binary
      systemd
      echo -e
      echo -e "${CYAN}--> mx-bridge-sc-calls-executor upgraded. Don't forget to start it...${NC}"
      echo -e
    ;;

    [Nn]* )
      echo -e "${GREEN}Fine ! Skipping upgrade on this machine...${NC}"
    ;;

    * )
      echo -e "${GREEN}I'll take that as a no then... moving on...${NC}"
    ;;
   esac
}

function start {
  sudo systemctl daemon-reload
  sudo systemctl start mx-bridge-sc-calls-executor
}

function stop {
  sudo systemctl stop mx-bridge-sc-calls-executor
}

function cleanup {
  paths
  echo -e
  read -p "Do you want to delete installed nodes (Default No) ? (Yy/Nn)" yn
  echo -e
  case $yn in
    [Yy]* )
      echo -e "${RED}OK ! Cleaning everything !${NC}"

      echo -e
      echo -e "${GREEN}Stopping MultiversX Bridge SC calls executor binary on host ${CYAN}$HOST${GREEN}...${NC}"
      echo -e
      if [ -e /etc/systemd/system/mx-bridge-sc-calls-executor.service ]; then sudo systemctl stop mx-bridge-sc-calls-executor; fi
      echo -e "${GREEN}Erasing unit file and directory for MultiversX the Bridge SC calls executor...${NC}"
      echo -e
      if [ -e /etc/systemd/system/mx-bridge-sc-calls-executor.service ]; then sudo rm /etc/systemd/system/mx-bridge-sc-calls-executor.service; fi
      if [ -d $CUSTOM_HOME/mx-bridge-sc-calls-executor ]; then sudo rm -rf $CUSTOM_HOME/mx-bridge-sc-calls-executor; fi

      # Reload systemd after deleting node units
      sudo systemctl daemon-reload

      echo -e "${GREEN}Removing paths from .profile on host ${CYAN}$HOST${GREEN}...${NC}"
      echo -e
      sed -i 'N;$!P;$!D;$d' ~/.profile

      if [ -d "$GOPATH/pkg" ]; then sudo rm -rf $GOPATH/pkg; fi
     ;;

    [Nn]* )
      echo -e "${GREEN}Fine ! Skipping cleanup on this machine...${NC}"
    ;;

    * )
      echo -e "${GREEN}I'll take that as a no then... moving on...${NC}"
    ;;
    esac
}

function get_logs {
  # Get journalctl logs for the service
  LOGSTIME=$(date "+%Y%m%d-%H%M")
  # Make sure the log path exists
  mkdir -p $CUSTOM_HOME/mx-bridge-sc-calls-executor

  echo -e
  echo -e "${GREEN}Getting logs for MultiversX Bridge SC calls executor...${NC}"
  echo -e
  sudo journalctl --unit mx-bridge-sc-calls-executor >> $CUSTOM_HOME/mx-bridge-sc-calls-executor-logs/mx-bridge-sc-calls-executor-logs.log

  # Compress the logs and erase files
  cd $CUSTOM_HOME/mx-bridge-sc-calls-executor-logs/ && tar -zcvf logs-$LOGSTIME.tar.gz *.log && rm *.log
  echo -e
  echo -e "${GREEN}---> Logs have been stored in the ${CYAN}~/mx-bridge-sc-calls-executor-logs${GREEN} directory...${NC}"
}
