#!/bin/bash
set -e

#-------------------------------#### DON'T CHANGE THESE, use local.cfg instead ####-------------------------------#

# Color definitions
RED='\x1B[0;31m'
CYAN='\x1B[0;36m'
GREEN='\x1B[0;32m'
NC='\x1B[0m'

# Make sure curl and jq commands exist & if not install them
if ! [ -x "$(command -v curl)" ]; then sudo apt update; sudo apt install curl -qq -y; fi
if ! [ -x "$(command -v jq)" ]; then sudo apt update; sudo apt install jq -qq -y; fi

CUSTOM_HOME="/home/ubuntu"
CUSTOM_USER="ubuntu"
GITHUBTOKEN=""
MONITOR_EXTRA_FLAGS=""

# Make script aware of its location
SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"
WORKDIR="$( cd "$(dirname "$0")" & cd ../.. ; pwd -P )"

# Use the latest MultiversX tested GO Lang version
GO_LATEST_TESTED="go1.20.7"

# Obtain the tag for the latest version node & configs
TMPVAR="tags/"

if [ -z "$GITHUBTOKEN" ]; then
                VERSION="tags/$(curl --silent "https://api.github.com/repos/multiversx/mx-bridge-eth-go/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')"
                RELEASENOTES=$(curl --silent  "https://api.github.com/repos/multiversx/mx-bridge-eth-go/releases/latest" | grep '"body": '| cut -f2- -d:)
                GITHUB_RATE_LIMIT_RESPONSE=$(curl -s https://api.github.com/rate_limit)

        else
          VERSION="tags/$(curl --silent -H "Authorization: token $GITHUBTOKEN" "https://api.github.com/repos/multiversx/mx-bridge-eth-go/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')"
          RELEASENOTES=$(curl --silent -H "Authorization: token $GITHUBTOKEN" "https://api.github.com/repos/multiversx/mx-bridge-eth-go/releases/latest" | grep '"body": '| cut -f2- -d:)
          GITHUB_RATE_LIMIT_RESPONSE=$(curl --silent -H "Authorization: token $GITHUBTOKEN" "https://api.github.com/rate_limit")

    fi

SHOWVER=$(echo ${VERSION#${TMPVAR}})

SCRIPTS_LOCATION=$(pwd)
DIRECTORY_NAME=${PWD##*/}

# GitHub API related variables
GITHUB_API_LIMIT=$(echo $GITHUB_RATE_LIMIT_RESPONSE | jq -r .resources.core.limit)
GITHUB_API_USED=$(echo $GITHUB_RATE_LIMIT_RESPONSE | jq -r .resources.core.used)
GITHUB_API_RESET=$(echo $GITHUB_RATE_LIMIT_RESPONSE | jq -r .resources.core.reset)
HUMAN_TIME=$(date -d @"$GITHUB_API_RESET")

# Allow user to override the current version to be used
OVERRIDE_VER=""